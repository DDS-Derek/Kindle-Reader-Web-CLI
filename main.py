import atexit
import platform
import os
import zipfile, io

# 创建默认配置
def create_config():
    if not os.path.exists("head/config.py"):
        zip_file = b'PK\x03\x04\x14\x00\x02\x00\x08\x00k\xbdDV\xd85\xac\xa6\xd7\x00\x00\x00\x17\x01\x00\x00\t\x00\x00\x00config.py+\xc8/*Q\xb0U\xf0\xcb\xcfK\xe5\xe5rqu\nu\x07\xf2\xdc\x12s\x8a\x81\xdc\xd2\xa2\x1c G)\xa3\xa4\xa4\xc0J_\xdf\xd0\xc8\\\xcf\x00\x08\r\xad,\x0c,\x0c\xf4\x8bR\x13SR\x8b\x8c\xf5\x95x\xb9x\xb9\x1cCC\xfc\xe3\x9d\x1c\x9d\xbdC\x03\x10\xda\x91\x04\xe3C<}]\x812\xc6f\x06\x06\xbc\\\xe9\x99%\x19\xa5I\xf1%\xf9\xd9\xa9y \x0b\xdc=C<B\x9d\x14B\xfc\xbd]\xfd\x94\xe0\xd2y\x89\xb9\xa9H\xb2\xa1\xc1\xaeA~\x8e\xbe\xae\x08\x05E\xa9\x05\xf9H\n\x82\\\x03\xfc\xc1\x8eQVx\xbey\xf7\xf3\xdd\xf3\x9f\xf7\xad\x7f\xba\xa8\xf9i\xff\x8c\x97\xed\xfd\xbc\\IE@\xb5\xea6)\x99e\n\xc99\x89\xc5\xc5\xb6J\xe5IJv6\xfa@\x01;u^.\x90w\xe2s\xf3S@V\x02\x9d\x08\x00PK\x01\x02\x14\x00\x14\x00\x02\x00\x08\x00k\xbdDV\xd85\xac\xa6\xd7\x00\x00\x00\x17\x01\x00\x00\t\x00$\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00config.py\n\x00 \x00\x00\x00\x00\x00\x01\x00\x18\x00\xe3\xf3\x06i\xaf8\xd9\x01\x98\x85\x0bi\xaf8\xd9\x01p\x14\x95V\xaf8\xd9\x01PK\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00[\x00\x00\x00\xfe\x00\x00\x00\x00\x00'
        zip_file = io.BytesIO(zip_file)
        with zipfile.ZipFile(zip_file, 'r') as f:
            for file in f.namelist():
                f.extract(file, "./head/")
            f.close()





if __name__ == "__main__":
    #引用
    create_config()
    from head.func import start, exit_do, ban_windows_window_close_button

    # 注册退出函数
    atexit.register(exit_do)

    # 禁用窗口关闭按钮
    if platform.system() == "Windows":
        try:
            ban_windows_window_close_button()
        except:
            try:
                os.system("pip install pywin32")
                ban_windows_window_close_button()
            except:
                ...
    start()
